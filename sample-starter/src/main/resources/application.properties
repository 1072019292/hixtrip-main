# 数据库驱动：
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 数据源名称
spring.datasource.name=defaultDataSource
# 数据库连接地址
spring.datasource.url=jdbc:mysql://localhost:3306/hixtrip?serverTimezone=UTC
# 数据库用户名&密码：
spring.datasource.username=root
spring.datasource.password=123456
#MyBatis
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

spring.devtools.livereload.enabled=false

#knife4j和swagger
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.operations-sorter=alpha
springdoc.api-docs.path=/v3/api-docs
springdoc.group-configs[0].group=default
springdoc.group-configs[0].paths-to-match=/**
springdoc.group-configs[0].packages-to-scan=com.heima
knife4j.enable=true
#knife4j.setting.language=zh_cn

############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
# token名称 (同时也是cookie名称)
sa-token.token-name=satoken
# token有效期，单位s 默认30天, -1代表永不过期
sa-token.timeout=2592000
# token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
sa-token.activity-timeout=-1
# 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
sa-token.is-concurrent=true
# 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
sa-token.is-share=true
# token风格
# sa-token.token-style=uuid
# 是否输出操作日志
sa-token.is-log=false
# jwt秘钥
sa-token.jwt-secret-key=asdasdasifhueuiwyurfewbfjsdafjk


# Redis数据库索引（默认为0）
spring.data.redis.database=0
# Redis服务器地址
spring.data.redis.host=127.0.0.1
# Redis服务器连接端口
spring.data.redis.port=6379
# Redis服务器连接密码（默认为空）
# spring.data.redis.password=
# 连接超时时间
spring.data.redis.timeout=10s
# 连接池最大连接数
spring.data.redis.lettuce.pool.max-active=200
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.data.redis.lettuce.pool.max-wait=-1ms
# 连接池中的最大空闲连接
spring.data.redis.lettuce.pool.max-idle=10
# 连接池中的最小空闲连接
spring.data.redis.lettuce.pool.min-idle=0

# Mybatis-Plus 配置

# 指定Mybatis-Plus的映射文件位置
mybatis-plus.mapper-locations=classpath:mappers/*xml

# 指定Mybatis-Plus的实体类所在包
mybatis-plus.type-aliases-package=com.heima.entity.article

# 配置全局ID生成策略，此处设置为自动（根据数据库自增或其他方式）
mybatis-plus.global-config.db-config.id-type=auto

# 配置驼峰命名法转换，将数据库表字段的下划线命名方式映射为Java实体类的驼峰命名方式
mybatis-plus.configuration.map-underscore-to-camel-case=true

# 禁用Mybatis的二级缓存
mybatis-plus.configuration.cache-enabled=false

# 指定Mybatis-Plus的类型处理器所在包
mybatis-plus.type-handlers-package=com.heima

# 允许Bean定义覆盖，以便在引入Mybatis-Plus依赖时避免冲突
spring.main.allow-bean-definition-overriding=true

# 配置Mybatis-Plus的分页插件
mybatis-plus.configuration.plugins=com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor

# 配置Mybatis-Plus的性能分析插件
mybatis-plus.configuration.interceptor-optimistic-locker=com.baomidou.mybatisplus.extension.plugins.OptimisticLockerInterceptor

# qq邮箱发邮件用的服务器，固定写
spring.mail.host=smtp.qq.com
# qq邮箱
spring.mail.username=1072019292@qq.com
# 不是qq的登录密码，而是账户里面的授权码
spring.mail.password=enqtlfiboodbbcgi

# 固定写
spring.mail.protocol=smtp
# 固定写
spring.mail.properties.mail.smtp.auth=true
# 固定写
spring.mail.properties.mail.smtp.port=465

spring.mail.properties.mail.display.sendmail=Javen
spring.mail.properties.mail.display.sendname=Spring Boot Guide Email
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.default-encoding=utf-8
# 这个跟qq邮箱保持一致
spring.mail.from=1072019292@qq.com

# 阿里云OSS配置
leadnews.alioss.endpoint=oss-cn-hangzhou.aliyuncs.com
leadnews.alioss.accessKeyId=LTAI5t7U49QpsyBr8Q9ichSa
leadnews.alioss.accessKeySecret=BdL2NK0ov0vkBVOZvCq5yGp2JrRJ4O
leadnews.alioss.bucketName=lz-study-1

# 七牛云OSS配置
leadnews.qiniuoss.accessKey=_9JvnVqAFwHXRRMQK8hIEH_durd6BVLJBk6hxoaA
leadnews.qiniuoss.secretKey=z-a57YlXKN4-sTHATHsppQ88Y7MKt-UljnhWQ90P
leadnews.qiniuoss.bucket=lz-study-1
leadnews.qiniuoss.domain=rtak3s3v5.hd-bkt.clouddn.com

